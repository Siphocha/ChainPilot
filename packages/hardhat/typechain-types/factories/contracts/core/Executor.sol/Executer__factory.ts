/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Executer,
  ExecuterInterface,
} from "../../../../contracts/core/Executor.sol/Executer";

const _abi = [
  {
    inputs: [],
    name: "ExecutionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidApproval",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskHash",
        type: "bytes32",
      },
    ],
    name: "TaskApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TaskExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maxValue",
        type: "uint256",
      },
    ],
    name: "approveTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "executeTask",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "userApprovals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061045c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806313134cbb146100465780636655370c1461006d5780639222ab6814610098575b600080fd5b6100596100543660046102df565b6100ad565b604051901515815260200160405180910390f35b61005961007b366004610348565b600060208181529281526040808220909352908152205460ff1681565b6100ab6100a6366004610372565b6101fa565b005b600080858585856040516020016100c794939291906103cc565b60408051601f1981840301815291815281516020928301206001600160a01b038a16600090815280845282812082825290935291205490915060ff1661011f576040516282b42960e81b815260040160405180910390fd5b6000866001600160a01b031684878760405161013c929190610416565b60006040518083038185875af1925050503d8060008114610179576040519150601f19603f3d011682016040523d82523d6000602084013e61017e565b606091505b50509050806101a057604051632b3f6d1160e21b815260040160405180910390fd5b866001600160a01b0316886001600160a01b03167fd6d86ce053b89d432b2fd30a609522ed31417648b2a68b2a5c6467f6ee396ff4836040516101e7911515815260200190565b60405180910390a3979650505050505050565b60008484848460405160200161021394939291906103cc565b60408051601f198184030181528282528051602091820120336000818152808452848120838252909352928220805460ff19166001179055935083927fd3c3cfa61ceb5a911ffbabe2c320e2c77e47293768d12775754e3a4bed8e53139190a35050505050565b80356001600160a01b038116811461029157600080fd5b919050565b60008083601f8401126102a857600080fd5b50813567ffffffffffffffff8111156102c057600080fd5b6020830191508360208285010111156102d857600080fd5b9250929050565b6000806000806000608086880312156102f757600080fd5b6103008661027a565b945061030e6020870161027a565b9350604086013567ffffffffffffffff81111561032a57600080fd5b61033688828901610296565b96999598509660600135949350505050565b6000806040838503121561035b57600080fd5b6103648361027a565b946020939093013593505050565b6000806000806060858703121561038857600080fd5b6103918561027a565b9350602085013567ffffffffffffffff8111156103ad57600080fd5b6103b987828801610296565b9598909750949560400135949350505050565b6001600160a01b038516815260606020820181905281018390528284608083013760006080848301015260006080601f19601f860116830101905082604083015295945050505050565b818382376000910190815291905056fea26469706673582212202b66b8d6dc5bf18ee56158767882f5c01d3f68ed1a28d3f158ec796a32f2ab9264736f6c63430008140033";

type ExecuterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExecuterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Executer__factory extends ContractFactory {
  constructor(...args: ExecuterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Executer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Executer__factory {
    return super.connect(runner) as Executer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecuterInterface {
    return new Interface(_abi) as ExecuterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Executer {
    return new Contract(address, _abi, runner) as unknown as Executer;
  }
}
