/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AutomationAgent,
  AutomationAgentInterface,
} from "../../../contracts/core/AutomationAgent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_scheduler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_executer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientGasCredit",
    type: "error",
  },
  {
    inputs: [],
    name: "TaskConditionsNotMet",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "taskId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TaskAutoExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "taskId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "TaskSubscribed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taskId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "conditionsProof",
        type: "bytes",
      },
    ],
    name: "executeTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scheduler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasCredit",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "conditionsHash",
        type: "bytes32",
      },
    ],
    name: "subscribeTask",
    outputs: [
      {
        internalType: "uint256",
        name: "taskId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "taskIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tasks",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasCredit",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "conditionsHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610a94380380610a9483398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a0516109d46100c060003960008181606c01526102bd0152600061014701526109d46000f3fe6080604052600436106100555760003560e01c8063240ff7671461005a5780633328843f146100ab5780638d977672146100cd57806394fc3f05146100fe578063ad8ef91c1461011f578063d1ad17bf14610135575b600080fd5b34801561006657600080fd5b5061008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100b757600080fd5b506100cb6100c6366004610644565b610169565b005b3480156100d957600080fd5b506100ed6100e8366004610690565b6103c8565b6040516100a29594939291906106f9565b61011161010c366004610739565b61048c565b6040519081526020016100a2565b34801561012b57600080fd5b5061011160015481565b34801561014157600080fd5b5061008e7f000000000000000000000000000000000000000000000000000000000000000081565b600083815260208181526040808320815160a08101835281546001600160a01b0390811682526001830154169381019390935260028101805491928401916101b0906107ac565b80601f01602080910402602001604051908101604052809291908181526020018280546101dc906107ac565b80156102295780601f106101fe57610100808354040283529160200191610229565b820191906000526020600020905b81548152906001019060200180831161020c57829003601f168201915b50505091835250506003820154602082015260049091015460409091015280519091506001600160a01b0316610271576040516282b42960e81b815260040160405180910390fd5b610280816080015184846105d6565b61029d57604051638694abcf60e01b815260040160405180910390fd5b6000808260600151116102b15760006102b7565b81606001515b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031682846000015185602001518660400151600060405160240161030a94939291906107e6565b60408051601f198184030181529181526020820180516001600160e01b03166313134cbb60e01b1790525161033f9190610826565b60006040518083038185875af1925050503d806000811461037c576040519150601f19603f3d011682016040523d82523d6000602084013e610381565b606091505b50509050857ea0ac04e1721a4b5d7c7a66b0bc92ac7c8039897d035e55cf8c032b40fb7489826040516103b8911515815260200190565b60405180910390a2505050505050565b6000602081905290815260409020805460018201546002830180546001600160a01b039384169492909316926103fd906107ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610429906107ac565b80156104765780601f1061044b57610100808354040283529160200191610476565b820191906000526020600020905b81548152906001019060200180831161045957829003601f168201915b5050505050908060030154908060040154905085565b600180546000918261049d83610842565b9190505590506040518060a00160405280336001600160a01b03168152602001876001600160a01b0316815260200186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506020808301879052604092830186905284825281815290829020835181546001600160a01b03199081166001600160a01b039283161783559285015160018301805490941691161790915590820151600282019061056290826108ce565b506060820151600382015560809091015160049091015582156105a057823410156105a057604051631e2b5e1960e01b815260040160405180910390fd5b604051339082907f8dd7225d8f7e3b6591be496822488582564841889f37d279380c42e9e7d31f9890600090a395945050505050565b600082826040516105e892919061098e565b6040518091039020841490509392505050565b60008083601f84011261060d57600080fd5b50813567ffffffffffffffff81111561062557600080fd5b60208301915083602082850101111561063d57600080fd5b9250929050565b60008060006040848603121561065957600080fd5b83359250602084013567ffffffffffffffff81111561067757600080fd5b610683868287016105fb565b9497909650939450505050565b6000602082840312156106a257600080fd5b5035919050565b60005b838110156106c45781810151838201526020016106ac565b50506000910152565b600081518084526106e58160208601602086016106a9565b601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090610725908301866106cd565b606083019490945250608001529392505050565b60008060008060006080868803121561075157600080fd5b85356001600160a01b038116811461076857600080fd5b9450602086013567ffffffffffffffff81111561078457600080fd5b610790888289016105fb565b9699909850959660408101359660609091013595509350505050565b600181811c908216806107c057607f821691505b6020821081036107e057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03858116825284166020820152608060408201819052600090610812908301856106cd565b905060ff8316606083015295945050505050565b600082516108388184602087016106a9565b9190910192915050565b60006001820161086257634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f8211156108c957600081815260208120601f850160051c810160208610156108a65750805b601f850160051c820191505b818110156108c5578281556001016108b2565b5050505b505050565b815167ffffffffffffffff8111156108e8576108e8610869565b6108fc816108f684546107ac565b8461087f565b602080601f83116001811461093157600084156109195750858301515b600019600386901b1c1916600185901b1785556108c5565b600085815260208120601f198616915b8281101561096057888601518255948401946001909101908401610941565b508582101561097e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818382376000910190815291905056fea264697066735822122040bd8f90f1e0b41cf67be89cce8b207d2f10f4b47670915b6132e8903df81bc164736f6c63430008140033";

type AutomationAgentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutomationAgentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutomationAgent__factory extends ContractFactory {
  constructor(...args: AutomationAgentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _scheduler: AddressLike,
    _executer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_scheduler, _executer, overrides || {});
  }
  override deploy(
    _scheduler: AddressLike,
    _executer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_scheduler, _executer, overrides || {}) as Promise<
      AutomationAgent & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AutomationAgent__factory {
    return super.connect(runner) as AutomationAgent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutomationAgentInterface {
    return new Interface(_abi) as AutomationAgentInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AutomationAgent {
    return new Contract(address, _abi, runner) as unknown as AutomationAgent;
  }
}
