/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  StakingModule,
  StakingModuleInterface,
} from "../../../../contracts/modules/staking/StakingModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minStakeDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NoStake",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minStakeDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastClaimTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b23380380610b2383398101604081905261002f916100ce565b846001600160a01b0381166100575760405163e6c4247b60e01b815260040160405180910390fd5b600080546001600160a01b039283166001600160a01b03199182161790915594811660805260408051606081018252858152602081018590529290911691018190526001929092556002556003805490921617905550610125565b80516001600160a01b03811681146100c957600080fd5b919050565b600080600080600060a086880312156100e657600080fd5b6100ef866100b2565b94506100fd602087016100b2565b93506040860151925060608601519150610119608087016100b2565b90509295509295909350565b6080516109d561014e600039600081816101e101528181610372015261067f01526109d56000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806372f702f31161008c5780638da5cb5b116100665780638da5cb5b1461022c5780639e447fc61461023f578063a694fc3a14610252578063f2fde38b1461026557600080fd5b806372f702f3146101dc578063817b1cd21461021b5780638456cb591461022457600080fd5b8063372500ab116100c8578063372500ab146101695780633f4ba83a146101715780634e94c285146101795780635c975abb146101b857600080fd5b806316934fc4146100ef5780632def66201461013e57806331d7a26214610148575b600080fd5b61011e6100fd3660046108b9565b60046020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b610146610278565b005b61015b6101563660046108b9565b61041a565b604051908152602001610135565b6101466104b6565b6101466104c1565b6001546002546003546101949291906001600160a01b031683565b6040805193845260208401929092526001600160a01b031690820152606001610135565b6000546101cc90600160a01b900460ff1681565b6040519015158152602001610135565b6102037f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610135565b61015b60055481565b610146610522565b600054610203906001600160a01b031681565b61014661024d3660046108e9565b610589565b6101466102603660046108e9565b6105b8565b6101466102733660046108b9565b610727565b336000908152600460209081526040808320815160608101835281548082526001830154948201949094526002909101549181019190915291036102cf57604051636567cc4d60e11b815260040160405180910390fd5b8051600580548291906000906102e6908490610918565b909155505060025460208301516102fd9190610931565b421015610322576064610311826050610944565b61031b919061095b565b905061032b565b61032b336107d3565b3360008181526004602081905260408083208381556001810184905560020192909255905163a9059cbb60e01b815290810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df919061097d565b5060405181815233907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75906020015b60405180910390a25050565b6001600160a01b0381166000908152600460209081526040808320815160608101835281548082526001830154948201949094526002909101549181019190915290820361046b5750600092915050565b600081604001514261047d9190610918565b6001548351919250670de0b6b3a764000091839161049a91610944565b6104a49190610944565b6104ae919061095b565b949350505050565b6104bf336107d3565b565b6000546001600160a01b031633146104eb576040516282b42960e81b815260040160405180910390fd5b6000805460ff60a01b1916815560405133917f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa91a2565b6000546001600160a01b0316331461054c576040516282b42960e81b815260040160405180910390fd5b6000805460ff60a01b1916600160a01b17815560405133917f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891a2565b6000546001600160a01b031633146105b3576040516282b42960e81b815260040160405180910390fd5b600155565b600054600160a01b900460ff16156105e35760405163ab35696f60e01b815260040160405180910390fd5b806000036106045760405163162908e360e11b815260040160405180910390fd5b3360008181526004602052604090209061061d906107d3565b818160000160008282546106319190610931565b90915550504260018201819055600282015560058054839190600090610658908490610931565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f4919061097d565b5060405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200161040e565b6000546001600160a01b03163314610751576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0381166107785760405163e6c4247b60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006107de8261041a565b9050806000036107ec575050565b6001600160a01b0382811660008181526004602081905260409182902042600290910155600354915163a9059cbb60e01b815290810192909252602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d919061097d565b50816001600160a01b03167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161040e91815260200190565b6000602082840312156108cb57600080fd5b81356001600160a01b03811681146108e257600080fd5b9392505050565b6000602082840312156108fb57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561092b5761092b610902565b92915050565b8082018082111561092b5761092b610902565b808202811582820484141761092b5761092b610902565b60008261097857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561098f57600080fd5b815180151581146108e257600080fdfea26469706673582212200f1a50d7c8f5619cd759d4f790a348fc7039a2d79ee146b212bc5d568265f9f764736f6c63430008140033";

type StakingModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingModule__factory extends ContractFactory {
  constructor(...args: StakingModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _stakingToken: AddressLike,
    _rewardRate: BigNumberish,
    _minStakeDuration: BigNumberish,
    _rewardToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owner,
      _stakingToken,
      _rewardRate,
      _minStakeDuration,
      _rewardToken,
      overrides || {}
    );
  }
  override deploy(
    _owner: AddressLike,
    _stakingToken: AddressLike,
    _rewardRate: BigNumberish,
    _minStakeDuration: BigNumberish,
    _rewardToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _owner,
      _stakingToken,
      _rewardRate,
      _minStakeDuration,
      _rewardToken,
      overrides || {}
    ) as Promise<
      StakingModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StakingModule__factory {
    return super.connect(runner) as StakingModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingModuleInterface {
    return new Interface(_abi) as StakingModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StakingModule {
    return new Contract(address, _abi, runner) as unknown as StakingModule;
  }
}
