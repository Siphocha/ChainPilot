{
  "address": "0x1dc4052FDEc1CC197a280B19a657704bc1910BBf",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_executer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "executeAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "ExecutionWindowExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "executeAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentTime",
          "type": "uint256"
        }
      ],
      "name": "ExecutionWindowNotReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "ExpiredApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "InvalidTask",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        }
      ],
      "name": "InvalidTimeWindow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "InvalidValue",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "TaskAlreadyCancelled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "TaskNotFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "taskHash",
          "type": "bytes32"
        }
      ],
      "name": "UnauthorizedExecuter",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "taskHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "TaskApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "TaskCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "taskHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "TaskExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        }
      ],
      "name": "TaskExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "executer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "executeAt",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expiryAt",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TaskScheduled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "approveTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "cancelTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "executeTask",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "executeTask",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        }
      ],
      "name": "getPendingTasks",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxValue",
          "type": "uint256"
        }
      ],
      "name": "getTaskHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "executeAt",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "expiryAt",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "scheduleTask",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taskIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "executeAt",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "expiryAt",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "executer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isCancelled",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "userApprovals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "maxValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2e68a7567ed340545831ed0e638f7a359d33edb8c49d09347647e04e0a77690c",
  "receipt": {
    "to": null,
    "from": "0x0dfDb5bBaEeCE3871f826DF1C6Fe24a2772f5d38",
    "contractAddress": "0x1dc4052FDEc1CC197a280B19a657704bc1910BBf",
    "transactionIndex": 149,
    "gasUsed": "1124225",
    "logsBloom": "0x
    "blockHash": "0x85a1012b56d0d7f9888d7d0129ed059cd5836b02b821fb9eb8310c426e65dee7",
    "transactionHash": "0x2e68a7567ed340545831ed0e638f7a359d33edb8c49d09347647e04e0a77690c",
    "logs": [],
    "blockNumber": 30319458,
    "cumulativeGasUsed": "40232435",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3175F8bDBEE3FaE7e3369eB352BADcd4237161AC"
  ],
  "numDeployments": 1,
  "solcInputHash": "15884642f0ce450738e5f97a660624ab",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_executer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"executeAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"ExecutionWindowExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"executeAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"}],\"name\":\"ExecutionWindowNotReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ExpiredApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidTask\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"InvalidTimeWindow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"name\":\"TaskAlreadyCancelled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"name\":\"TaskNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"taskHash\",\"type\":\"bytes32\"}],\"name\":\"UnauthorizedExecuter\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"taskHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"TaskApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"name\":\"TaskCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"taskHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"TaskExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"TaskExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"executeAt\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expiryAt\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TaskScheduled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"approveTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"name\":\"cancelTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"name\":\"executeTask\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"executeTask\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"getPendingTasks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxValue\",\"type\":\"uint256\"}],\"name\":\"getTaskHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"executeAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expiryAt\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"scheduleTask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taskIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tasks\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"executeAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expiryAt\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCancelled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"userApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"scheduleTask(uint64,uint64,address,bytes,uint256)\":{\"params\":{\"executeAt\":\"When the task should run (timestamp)\",\"expiryAt\":\"When the task becomes invalid (0 for no expiry)\",\"payload\":\"Encoded function call data\",\"target\":\"The final target contract\",\"value\":\"ETH/value to be sent with the call\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveTask(address,bytes,uint256,uint256)\":{\"notice\":\"Pre-approve a task with deadline\"},\"cancelTask(uint256)\":{\"notice\":\"Cancel a scheduled task\"},\"executeTask(address,address,bytes32,uint256)\":{\"notice\":\"Execute a pre-approved task from Scheduler\"},\"executeTask(uint256)\":{\"notice\":\"Execute a scheduled task via Executer\"},\"getPendingTasks(uint256,uint256)\":{\"notice\":\"Get pending tasks within a time range\"},\"getTaskHash(address,bytes,uint256)\":{\"notice\":\"Compute task hash for approval\"},\"scheduleTask(uint64,uint64,address,bytes,uint256)\":{\"notice\":\"Schedule a new task via Executer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Scheduler.sol\":\"ChainPilotScheduler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/Executor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/**\\n * @author @0xJonaseb11\\n * @title ChainPilotExecutor Contract\\n * @notice Securely executes pre-approved tasks from Scheduler\\n * @dev Uses EIP-712 signatures for approvals and optimized for Base network\\n */\\n\\n///////////////////////////////////////////////////\\n////////   REMEMBER TO ASK SIPHO IF WE NEED AA ////\\n////////.  SO I CAN SETUP EntryPoint.sol ////////\\n////////////////////////////////////////////////\\n\\ncontract ChainPilotExecutor {\\n\\n    // ------------------------ Custom Errors ------------------------\\n    error UnauthorizedExecuter(address user, bytes32 taskHash);\\n    error ExecutionFailed(bytes reason);\\n    error InvalidValue(uint256 expected, uint256 actual);\\n    error ExpiredApproval(uint256 deadline);\\n\\n    // ------------------------ Events ------------------------\\n    event TaskApproved(\\n        address indexed user,\\n        bytes32 indexed taskHash,\\n        uint256 maxValue,\\n        uint256 deadline\\n    );\\n    event TaskExecuted(\\n        address indexed user,\\n        address indexed target,\\n        bytes32 indexed taskHash,\\n        uint256 value,\\n        bool success\\n    );\\n\\n    // ------------------------ Storage ------------------------\\n    struct Approval {\\n        uint256 maxValue;\\n        uint256 deadline;\\n    }\\n\\n    mapping(address => mapping(bytes32 => Approval)) public userApprovals;\\n\\n    // ------------------------ External Functions ------------------------\\n    /**\\n     * @notice Pre-approve a task with deadline\\n     */\\n    function approveTask(\\n        address target,\\n        bytes calldata payload,\\n        uint256 maxValue,\\n        uint256 deadline\\n    ) external {\\n        bytes32 taskHash = getTaskHash(target, payload, maxValue);\\n        userApprovals[msg.sender][taskHash] = Approval(maxValue, deadline);\\n        emit TaskApproved(msg.sender, taskHash, maxValue, deadline);\\n    }\\n\\n    /**\\n     * @notice Execute a pre-approved task from Scheduler\\n     */\\n    function executeTask(\\n        address user,\\n        address target,\\n        bytes32 payloadHash,\\n        uint256 value\\n    ) external payable returns (bool) {\\n        Approval memory approval = userApprovals[user][payloadHash];\\n        \\n        if (approval.deadline == 0) revert UnauthorizedExecuter(user, payloadHash);\\n        if (block.timestamp > approval.deadline) revert ExpiredApproval(approval.deadline);\\n        if (value > approval.maxValue) revert InvalidValue(approval.maxValue, value);\\n        if (msg.value != value) revert InvalidValue(value, msg.value);\\n\\n        (bool success, bytes memory reason) = target.call{value: value}(\\n            abi.encodePacked(payloadHash, user)\\n        );\\n\\n        if (!success) revert ExecutionFailed(reason);\\n\\n        emit TaskExecuted(user, target, payloadHash, value, success);\\n        return success;\\n    }\\n\\n    // ------------------------ Public Functions ------------------------\\n    /**\\n     * @notice Compute task hash for approval\\n     */\\n    function getTaskHash(\\n        address target,\\n        bytes calldata payload,\\n        uint256 maxValue\\n    ) public pure returns (bytes32) {\\n        return keccak256(abi.encode(target, keccak256(payload), maxValue));\\n    }\\n}\",\"keccak256\":\"0x19288f349ee9752a9909bb286328befe3060eb39e1a1848d5fc47d866ef19f15\",\"license\":\"MIT\"},\"contracts/core/Scheduler.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/** \\n * @author @0xJonaseb11\\n * @title ChainPilotScheduler Contract\\n * @notice Queues time-based tasks for off-chain keepers to execute via Executer.\\n * @dev Features tight integration with Executer contract, packed storage, and enhanced security.\\n */\\n\\nimport { ChainPilotExecutor } from \\\"./Executor.sol\\\";\\n\\ncontract ChainPilotScheduler is ChainPilotExecutor {\\n\\n    // ------------------------ Custom Errors ------------------------\\n    error Unauthorized(address caller, address owner);\\n    error InvalidTask(string reason);\\n    error TaskNotFound(uint256 taskId);\\n    error TaskAlreadyCancelled(uint256 taskId);\\n    error InvalidTimeWindow(uint256 from, uint256 to);\\n    error ExecutionWindowNotReached(uint256 executeAt, uint256 currentTime);\\n    error ExecutionWindowExpired(uint256 executeAt, uint256 expiry);\\n\\n    // ------------------------ Events ------------------------\\n    event TaskScheduled(\\n        uint256 indexed taskId,\\n        address indexed user,\\n        address indexed executer,\\n        address target,\\n        uint64 executeAt,\\n        uint64 expiryAt,\\n        bytes32 payloadHash,\\n        uint256 value\\n    );\\n    event TaskCancelled(uint256 indexed taskId);\\n    event TaskExecuted(uint256 indexed taskId, address indexed executor);\\n\\n    // ------------------------ Structs ------------------------\\n    struct Task {\\n        uint64 executeAt;       \\n        uint64 expiryAt;        \\n        address user;          \\n        address executer;      \\n        address target;         \\n        bytes32 payloadHash;    \\n        uint256 value;         \\n        bool isCancelled;      \\n    }\\n\\n    // ------------------------ Storage ------------------------\\n    mapping(uint256 => Task) public tasks;\\n    uint256 public taskIdCounter;\\n    address public immutable executerAddress;\\n\\n    // ------------------------ Constructor ------------------------\\n    constructor(address _executer) {\\n        executerAddress = _executer;\\n    }\\n\\n    // ------------------------ Modifiers ------------------------\\n    modifier onlyTaskOwner(uint256 taskId) {\\n        if (tasks[taskId].user != msg.sender) {\\n            revert Unauthorized(msg.sender, tasks[taskId].user);\\n        }\\n        _;\\n    }\\n\\n    modifier validTask(uint256 taskId) {\\n        if (taskId >= taskIdCounter) revert TaskNotFound(taskId);\\n        _;\\n    }\\n\\n    // ------------------------ Externals ------------------------\\n    /**\\n     * @notice Schedule a new task via Executer\\n     * @param executeAt When the task should run (timestamp)\\n     * @param expiryAt When the task becomes invalid (0 for no expiry)\\n     * @param target The final target contract\\n     * @param payload Encoded function call data\\n     * @param value ETH/value to be sent with the call\\n     */\\n    function scheduleTask(\\n        uint64 executeAt,\\n        uint64 expiryAt,\\n        address target,\\n        bytes calldata payload,\\n        uint256 value\\n    ) external returns (uint256 taskId) {\\n        if (executeAt < block.timestamp + 60) {\\n            revert InvalidTask(\\\"Execution time must be at least 1 minute in future\\\");\\n        }\\n        if (expiryAt != 0 && expiryAt <= executeAt) {\\n            revert InvalidTask(\\\"Expiry must be after execution time\\\");\\n        }\\n        if (target == address(0)) {\\n            revert InvalidTask(\\\"Target cannot be zero address\\\");\\n        }\\n\\n        taskId = taskIdCounter++;\\n        bytes32 payloadHash = keccak256(payload);\\n        \\n        tasks[taskId] = Task({\\n            executeAt: executeAt,\\n            expiryAt: expiryAt,\\n            user: msg.sender,\\n            executer: executerAddress,\\n            target: target,\\n            payloadHash: payloadHash,\\n            value: value,\\n            isCancelled: false\\n        });\\n\\n        emit TaskScheduled(\\n            taskId,\\n            msg.sender,\\n            executerAddress,\\n            target,\\n            executeAt,\\n            expiryAt,\\n            payloadHash,\\n            value\\n        );\\n    }\\n\\n    /**\\n     * @notice Cancel a scheduled task\\n     */\\n    function cancelTask(uint256 taskId) \\n        external \\n        validTask(taskId)\\n        onlyTaskOwner(taskId)\\n    {\\n        Task storage task = tasks[taskId];\\n        \\n        if (task.isCancelled) revert TaskAlreadyCancelled(taskId);\\n        if (block.timestamp >= task.executeAt) {\\n            revert ExecutionWindowNotReached(task.executeAt, block.timestamp);\\n        }\\n\\n        task.isCancelled = true;\\n        emit TaskCancelled(taskId);\\n    }\\n\\n    // ------------------------ Keepers ------------------------\\n    /**\\n     * @notice Execute a scheduled task via Executer\\n     */\\n    function executeTask(uint256 taskId) \\n        external \\n        validTask(taskId)\\n        returns (bool)\\n    {\\n        Task memory task = tasks[taskId];\\n\\n        if (task.isCancelled) revert TaskAlreadyCancelled(taskId);\\n        if (block.timestamp < task.executeAt) {\\n            revert ExecutionWindowNotReached(task.executeAt, block.timestamp);\\n        }\\n        if (task.expiryAt != 0 && block.timestamp > task.expiryAt) {\\n            revert ExecutionWindowExpired(task.executeAt, task.expiryAt);\\n        }\\n\\n        // prevent re-execution\\n        tasks[taskId].isCancelled = true;\\n\\n        // Forward to Executer contract\\n        bool success = ChainPilotExecutor(task.executer).executeTask{value: task.value}(\\n            task.user,\\n            task.target,\\n            task.payloadHash,\\n            task.value\\n        );\\n\\n        emit TaskExecuted(taskId, msg.sender);\\n        return success;\\n    }\\n\\n    // ------------------------ Views ------------------------\\n    /**\\n     * @notice Get pending tasks within a time range\\n     */\\n    function getPendingTasks(uint256 from, uint256 to) \\n        external \\n        view \\n        returns (uint256[] memory) \\n    {\\n        if (from > to) revert InvalidTimeWindow(from, to);\\n        \\n        uint256[] memory pendingTasks = new uint256[](taskIdCounter);\\n        uint256 count = 0;\\n\\n        for (uint256 i = 0; i < taskIdCounter; i++) {\\n            Task memory task = tasks[i];\\n            if (!task.isCancelled && \\n                task.executeAt >= from && \\n                task.executeAt <= to &&\\n                (task.expiryAt == 0 || block.timestamp <= task.expiryAt)) {\\n                pendingTasks[count++] = i;\\n            }\\n        }\\n\\n        assembly { mstore(pendingTasks, count) }\\n        return pendingTasks;\\n    }\\n}\",\"keccak256\":\"0x1939136d3a49238d412383dc06a24b1098992343b9e66262507d5d588cfcaa8b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c80638d977672116100645780638d977672146101b5578063a31e834814610289578063ad8ef91c1461029c578063c31784e8146102c0578063c5a1f9d8146102ed578063fa28eea71461030d57600080fd5b80632f4452ab146100a15780636655370c146100f25780636e3480c7146101435780637eec20a814610173578063867d072b14610195575b600080fd5b3480156100ad57600080fd5b506100d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100fe57600080fd5b5061012e61010d366004610f84565b60006020818152928152604080822090935290815220805460019091015482565b604080519283526020830191909152016100e9565b34801561014f57600080fd5b5061016361015e366004610fae565b61032d565b60405190151581526020016100e9565b34801561017f57600080fd5b5061019361018e366004610fae565b610599565b005b3480156101a157600080fd5b506101936101b036600461100f565b6106d6565b3480156101c157600080fd5b506102316101d0366004610fae565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006909501546001600160401b0380881697600160401b900416956001600160a01b039586169594851694909316929060ff1688565b604080516001600160401b03998a1681529890971660208901526001600160a01b039586169688019690965292841660608701529216608085015260a084019190915260c0830152151560e0820152610100016100e9565b610163610297366004611073565b610760565b3480156102a857600080fd5b506102b260025481565b6040519081526020016100e9565b3480156102cc57600080fd5b506102e06102db3660046110b5565b61096f565b6040516100e991906110d7565b3480156102f957600080fd5b506102b261030836600461111b565b610b27565b34801561031957600080fd5b506102b261032836600461118b565b610b84565b600081600254811061035a5760405163ad0e34ad60e01b8152600481018290526024015b60405180910390fd5b60008381526001602081815260409283902083516101008101855281546001600160401b038082168352600160401b9091041692810192909252918201546001600160a01b039081169382019390935260028201548316606082015260038201549092166080830152600481015460a0830152600581015460c08301526006015460ff1615801560e08301526104065760405163eeac5e0b60e01b815260048101859052602401610351565b80516001600160401b031642101561044557805160405163119a49a960e01b81526001600160401b039091166004820152426024820152604401610351565b60208101516001600160401b03161580159061046d575080602001516001600160401b031642115b156104a55780516020820151604051631ef8664b60e01b81526001600160401b03928316600482015291166024820152604401610351565b6000848152600160208190526040808320600601805460ff1916909217909155606083015160c084015184830151608086015160a08701519451631463d06960e31b81526001600160a01b03928316600482015290821660248201526044810194909452606484018290529091169163a31e8348919060840160206040518083038185885af115801561053c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105619190611208565b604051909150339086907f11c8cc8e36d66bb89cfaf81bbb01f3b3860115af6728e06325189a0d85da8f5690600090a3949350505050565b8060025481106105bf5760405163ad0e34ad60e01b815260048101829052602401610351565b6000828152600160208190526040909120015482906001600160a01b03163314610621576000818152600160208190526040918290200154905163295a81c160e01b81523360048201526001600160a01b039091166024820152604401610351565b6000838152600160205260409020600681015460ff16156106585760405163eeac5e0b60e01b815260048101859052602401610351565b80546001600160401b0316421061069657805460405163119a49a960e01b81526001600160401b039091166004820152426024820152604401610351565b60068101805460ff1916600117905560405184907fc6eacc3aa5b2aa77b5a826b832a804ca0b71830ec74f9aa57a15edd978c31ed690600090a250505050565b60006106e486868686610b27565b604080518082018252858152602080820186815233600081815280845285812087825284528590209351845590516001909301929092558251878152908101869052929350839290917f48c893cb02081fc6b4de55c729b97289cd9247ec524f10b1be9f1cfe998b6a5e910160405180910390a3505050505050565b6001600160a01b0384166000908152602081815260408083208584528252808320815180830190925280548252600101549181018290529082036107c957604051630f918b9960e41b81526001600160a01b038716600482015260248101859052604401610351565b80602001514211156107f657806020015160405163d9ea6c7560e01b815260040161035191815260200190565b805183111561082557805160405163de9b74a160e01b8152600481019190915260248101849052604401610351565b82341461084e5760405163de9b74a160e01b815260048101849052346024820152604401610351565b600080866001600160a01b031685878a60405160200161088a92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f19818403018152908290526108a491611255565b60006040518083038185875af1925050503d80600081146108e1576040519150601f19603f3d011682016040523d82523d6000602084013e6108e6565b606091505b50915091508161090b57806040516315fcd67560e01b81526004016103519190611271565b85876001600160a01b0316896001600160a01b03167fdb99ff705e9a3913bdeb022b48c8d90544719458e56b839c685c4fb13fc31331888660405161095c9291909182521515602082015260400190565b60405180910390a4509695505050505050565b60608183111561099c5760405163293d061b60e11b81526004810184905260248101839052604401610351565b60006002546001600160401b038111156109b8576109b86112a4565b6040519080825280602002602001820160405280156109e1578160200160208202803683370190505b5090506000805b600254811015610b1b5760008181526001602081815260409283902083516101008101855281546001600160401b038082168352600160401b9091041692810192909252918201546001600160a01b039081169382019390935260028201548316606082015260038201549092166080830152600481015460a0830152600581015460c08301526006015460ff1615801560e08301819052610a94575080516001600160401b03168711155b8015610aaa575080516001600160401b03168610155b8015610ad8575060208101516001600160401b03161580610ad8575080602001516001600160401b03164211155b15610b0857818484610ae9816112d0565b955081518110610afb57610afb6112e9565b6020026020010181815250505b5080610b13816112d0565b9150506109e8565b50815290505b92915050565b6000848484604051610b3a9291906112ff565b604080519182900382206001600160a01b03909316602083015281019190915260608101839052608001604051602081830303815290604052805190602001209050949350505050565b6000610b9142603c61130f565b876001600160401b03161015610c0557604051630be4213d60e01b815260206004820152603260248201527f457865637574696f6e2074696d65206d757374206265206174206c656173742060448201527131206d696e75746520696e2066757475726560701b6064820152608401610351565b6001600160401b03861615801590610c2f5750866001600160401b0316866001600160401b031611155b15610c8957604051630be4213d60e01b815260206004820152602360248201527f457870697279206d75737420626520616674657220657865637574696f6e2074604482015262696d6560e81b6064820152608401610351565b6001600160a01b038516610ce057604051630be4213d60e01b815260206004820152601d60248201527f5461726765742063616e6e6f74206265207a65726f20616464726573730000006044820152606401610351565b60028054906000610cf0836112d0565b91905055905060008484604051610d089291906112ff565b60405180910390209050604051806101000160405280896001600160401b03168152602001886001600160401b03168152602001336001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001876001600160a01b03168152602001828152602001848152602001600015158152506001600084815260200190815260200160002060008201518160000160006101000a8154816001600160401b0302191690836001600160401b0316021790555060208201518160000160086101000a8154816001600160401b0302191690836001600160401b0316021790555060408201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a0820151816004015560c0820151816005015560e08201518160060160006101000a81548160ff0219169083151502179055509050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316336001600160a01b0316837fe0616614f846c7c03d76ed42e8f016d927e6840d079f83294b1c4a4ee04a0ed5898c8c878a60405161095c9594939291906001600160a01b039590951685526001600160401b0393841660208601529190921660408401526060830191909152608082015260a00190565b80356001600160a01b0381168114610f7f57600080fd5b919050565b60008060408385031215610f9757600080fd5b610fa083610f68565b946020939093013593505050565b600060208284031215610fc057600080fd5b5035919050565b60008083601f840112610fd957600080fd5b5081356001600160401b03811115610ff057600080fd5b60208301915083602082850101111561100857600080fd5b9250929050565b60008060008060006080868803121561102757600080fd5b61103086610f68565b945060208601356001600160401b0381111561104b57600080fd5b61105788828901610fc7565b9699909850959660408101359660609091013595509350505050565b6000806000806080858703121561108957600080fd5b61109285610f68565b93506110a060208601610f68565b93969395505050506040820135916060013590565b600080604083850312156110c857600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561110f578351835292840192918401916001016110f3565b50909695505050505050565b6000806000806060858703121561113157600080fd5b61113a85610f68565b935060208501356001600160401b0381111561115557600080fd5b61116187828801610fc7565b9598909750949560400135949350505050565b80356001600160401b0381168114610f7f57600080fd5b60008060008060008060a087890312156111a457600080fd5b6111ad87611174565b95506111bb60208801611174565b94506111c960408801610f68565b935060608701356001600160401b038111156111e457600080fd5b6111f089828a01610fc7565b979a9699509497949695608090950135949350505050565b60006020828403121561121a57600080fd5b8151801515811461122a57600080fd5b9392505050565b60005b8381101561124c578181015183820152602001611234565b50506000910152565b60008251611267818460208701611231565b9190910192915050565b6020815260008251806020840152611290816040850160208701611231565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016112e2576112e26112ba565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8183823760009101908152919050565b80820180821115610b2157610b216112ba56fea264697066735822122058804e007f72c5fb825c01df82dbfcfa377f79ad87a3d35eba22da2661813e7164736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "scheduleTask(uint64,uint64,address,bytes,uint256)": {
        "params": {
          "executeAt": "When the task should run (timestamp)",
          "expiryAt": "When the task becomes invalid (0 for no expiry)",
          "payload": "Encoded function call data",
          "target": "The final target contract",
          "value": "ETH/value to be sent with the call"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approveTask(address,bytes,uint256,uint256)": {
        "notice": "Pre-approve a task with deadline"
      },
      "cancelTask(uint256)": {
        "notice": "Cancel a scheduled task"
      },
      "executeTask(address,address,bytes32,uint256)": {
        "notice": "Execute a pre-approved task from Scheduler"
      },
      "executeTask(uint256)": {
        "notice": "Execute a scheduled task via Executer"
      },
      "getPendingTasks(uint256,uint256)": {
        "notice": "Get pending tasks within a time range"
      },
      "getTaskHash(address,bytes,uint256)": {
        "notice": "Compute task hash for approval"
      },
      "scheduleTask(uint64,uint64,address,bytes,uint256)": {
        "notice": "Schedule a new task via Executer"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 339,
        "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
        "label": "userApprovals",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Approval)332_storage))"
      },
      {
        "astId": 596,
        "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
        "label": "tasks",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Task)591_storage)"
      },
      {
        "astId": 598,
        "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
        "label": "taskIdCounter",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Approval)332_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => struct ChainPilotExecutor.Approval))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(Approval)332_storage)"
      },
      "t_mapping(t_bytes32,t_struct(Approval)332_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct ChainPilotExecutor.Approval)",
        "numberOfBytes": "32",
        "value": "t_struct(Approval)332_storage"
      },
      "t_mapping(t_uint256,t_struct(Task)591_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ChainPilotScheduler.Task)",
        "numberOfBytes": "32",
        "value": "t_struct(Task)591_storage"
      },
      "t_struct(Approval)332_storage": {
        "encoding": "inplace",
        "label": "struct ChainPilotExecutor.Approval",
        "members": [
          {
            "astId": 329,
            "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
            "label": "maxValue",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 331,
            "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
            "label": "deadline",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Task)591_storage": {
        "encoding": "inplace",
        "label": "struct ChainPilotScheduler.Task",
        "members": [
          {
            "astId": 576,
            "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
            "label": "executeAt",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 578,
            "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
            "label": "expiryAt",
            "offset": 8,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 580,
            "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 582,
            "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
            "label": "executer",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 584,
            "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
            "label": "target",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 586,
            "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
            "label": "payloadHash",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32"
          },
          {
            "astId": 588,
            "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
            "label": "value",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 590,
            "contract": "contracts/core/Scheduler.sol:ChainPilotScheduler",
            "label": "isCancelled",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}